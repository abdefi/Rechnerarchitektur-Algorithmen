
build/bubble_sort_O2/bubble_sort_O2.o:     Dateiformat elf64-x86-64


Disassembly of section .text:

0000000000000000 <bubbleSort>:
   0:	f3 0f 1e fa          	endbr64 
   4:	83 fe 01             	cmp    $0x1,%esi
   7:	7e 47                	jle    50 <bubbleSort+0x50>
   9:	44 8d 4e fe          	lea    -0x2(%rsi),%r9d
   d:	4c 8d 57 04          	lea    0x4(%rdi),%r10
  11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  18:	44 89 ca             	mov    %r9d,%edx
  1b:	48 89 f8             	mov    %rdi,%rax
  1e:	45 31 c0             	xor    %r8d,%r8d
  21:	49 8d 34 92          	lea    (%r10,%rdx,4),%rsi
  25:	0f 1f 00             	nopl   (%rax)
  28:	8b 10                	mov    (%rax),%edx
  2a:	8b 48 04             	mov    0x4(%rax),%ecx
  2d:	39 ca                	cmp    %ecx,%edx
  2f:	7e 0b                	jle    3c <bubbleSort+0x3c>
  31:	89 08                	mov    %ecx,(%rax)
  33:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  39:	89 50 04             	mov    %edx,0x4(%rax)
  3c:	48 83 c0 04          	add    $0x4,%rax
  40:	48 39 c6             	cmp    %rax,%rsi
  43:	75 e3                	jne    28 <bubbleSort+0x28>
  45:	45 85 c0             	test   %r8d,%r8d
  48:	74 06                	je     50 <bubbleSort+0x50>
  4a:	41 83 e9 01          	sub    $0x1,%r9d
  4e:	73 c8                	jae    18 <bubbleSort+0x18>
  50:	c3                   	ret    
  51:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  58:	00 00 00 00 
  5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000060 <printArray>:
  60:	f3 0f 1e fa          	endbr64 
  64:	85 f6                	test   %esi,%esi
  66:	7e 48                	jle    b0 <printArray+0x50>
  68:	8d 46 ff             	lea    -0x1(%rsi),%eax
  6b:	41 54                	push   %r12
  6d:	4c 8d 64 87 04       	lea    0x4(%rdi,%rax,4),%r12
  72:	55                   	push   %rbp
  73:	48 8d 2d 00 00 00 00 	lea    0x0(%rip),%rbp        # 7a <printArray+0x1a>
  7a:	53                   	push   %rbx
  7b:	48 89 fb             	mov    %rdi,%rbx
  7e:	66 90                	xchg   %ax,%ax
  80:	8b 13                	mov    (%rbx),%edx
  82:	48 89 ee             	mov    %rbp,%rsi
  85:	bf 01 00 00 00       	mov    $0x1,%edi
  8a:	31 c0                	xor    %eax,%eax
  8c:	48 83 c3 04          	add    $0x4,%rbx
  90:	e8 00 00 00 00       	call   95 <printArray+0x35>
  95:	4c 39 e3             	cmp    %r12,%rbx
  98:	75 e6                	jne    80 <printArray+0x20>
  9a:	5b                   	pop    %rbx
  9b:	bf 0a 00 00 00       	mov    $0xa,%edi
  a0:	5d                   	pop    %rbp
  a1:	41 5c                	pop    %r12
  a3:	e9 00 00 00 00       	jmp    a8 <printArray+0x48>
  a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  af:	00 
  b0:	bf 0a 00 00 00       	mov    $0xa,%edi
  b5:	e9 00 00 00 00       	jmp    ba <printArray+0x5a>

Disassembly of section .text.startup:

0000000000000000 <main>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # c <main+0xc>
   c:	b9 71 01 00 00       	mov    $0x171,%ecx
  11:	48 81 ec a0 0b 00 00 	sub    $0xba0,%rsp
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 84 24 98 0b 00 	mov    %rax,0xb98(%rsp)
  28:	00 
  29:	31 c0                	xor    %eax,%eax
  2b:	48 89 e7             	mov    %rsp,%rdi
  2e:	48 89 e5             	mov    %rsp,%rbp
  31:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  34:	8b 06                	mov    (%rsi),%eax
  36:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3d <main+0x3d>
  3d:	89 07                	mov    %eax,(%rdi)
  3f:	bf 01 00 00 00       	mov    $0x1,%edi
  44:	31 c0                	xor    %eax,%eax
  46:	e8 00 00 00 00       	call   4b <main+0x4b>
  4b:	be e3 02 00 00       	mov    $0x2e3,%esi
  50:	48 89 ef             	mov    %rbp,%rdi
  53:	e8 00 00 00 00       	call   58 <main+0x58>
  58:	be e3 02 00 00       	mov    $0x2e3,%esi
  5d:	48 89 ef             	mov    %rbp,%rdi
  60:	e8 00 00 00 00       	call   65 <main+0x65>
  65:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 6c <main+0x6c>
  6c:	bf 01 00 00 00       	mov    $0x1,%edi
  71:	31 c0                	xor    %eax,%eax
  73:	e8 00 00 00 00       	call   78 <main+0x78>
  78:	be e3 02 00 00       	mov    $0x2e3,%esi
  7d:	48 89 ef             	mov    %rbp,%rdi
  80:	e8 00 00 00 00       	call   85 <main+0x85>
  85:	48 8b 84 24 98 0b 00 	mov    0xb98(%rsp),%rax
  8c:	00 
  8d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  94:	00 00 
  96:	75 0b                	jne    a3 <main+0xa3>
  98:	48 81 c4 a0 0b 00 00 	add    $0xba0,%rsp
  9f:	31 c0                	xor    %eax,%eax
  a1:	5d                   	pop    %rbp
  a2:	c3                   	ret    
  a3:	e8 00 00 00 00       	call   a8 <printArray+0x48>
